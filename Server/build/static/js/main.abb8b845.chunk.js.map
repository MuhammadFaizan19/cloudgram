{"version":3,"sources":["Components/LandingIntro/LandingIntro.module.css","Components/ImageGrid/ImageGrid.module.css","App.module.css","Components/BackgroundImage/BackgroundImage.module.css","Components/Forms/Signin/Signin.module.css","Components/UI/Button/Button.module.css","Components/UI/Input/Input.module.css","Components/Forms/Signup/Signup.module.css","Container/Cloudgram.module.css","Components/Modal/ModalSharing.module.css","Components/Toolbar/Toolbar.module.css","Components/BackgroundImage/BackgroundImage.js","Components/Toolbar/Toolbar.js","Store/actions/authActions.js","Components/UI/Button/Button.js","Components/UI/Input/Input.js","Components/Forms/Signin/Signin.js","Components/Forms/Signup/Signup.js","Components/LandingIntro/LandingIntro.js","Components/Modal/ModalGallery.js","Store/actions/imageActions.js","Components/Modal/ModalSharing.js","Store/actions/userActions.js","Components/UploadImage/UploadImage.js","Components/ImageGrid/ImageGrid.js","Container/Cloudgram.js","App.js","reportWebVitals.js","Store/reducers/authReducer.js","Store/reducers/imageReducer.js","Store/reducers/userReducer.js","Store/reducers/rootReducer.js","Firebase/Config.js","Store/index.js","index.js","Components/UploadImage/UploadImage.module.css","Components/Modal/ModalGallery.module.css"],"names":["module","exports","backgroundImage","className","classes","BackgroundImage","connect","state","isLoggedIn","firebase","auth","uid","name","userData","dispatch","signOut","getState","getFirebase","then","type","Header","NavLink","to","id","toUpperCase","onClick","button","props","Button","e","children","input","Input","onChange","placeholder","authError","signIn","creds","signInWithEmailAndPassword","email","password","res","firestore","collection","doc","user","get","data","catch","err","console","log","signInEmailPassword","googleSignIn","googleProvider","GoogleAuthProvider","signInWithPopup","loggedUser","displayName","sendPasswordResetEmail","set","useState","setState","handleChange","target","value","Signin","preventDefault","signupError","signUp","newUser","createUserWithEmailAndPassword","fullname","message","error","setError","Signup","values","Object","canSubmit","i","length","landingIntro","Name","Intro","modalGallery","document","getElementById","style","opacity","ModalGallery","classList","contains","setSelectedImage","Container","src","selectedImage","imagePath","alt","getImages","shared","userEmail","axios","imagesList","filter","imageData","sharedTo","images","users","currentUser","getUsers","docs","map","updateImage","updatedData","imageUpdate","put","_id","updatedImage","setSharing","setEmail","useEffect","selectImage","previousSelect","getElementsByClassName","remove","Modal","ModalSharing","Controls","includes","newSharedTo","concat","setTimeout","Modimg","index","uploadError","image","upload","formData","FormData","append","post","imageUpload","title","setImage","sharedImagesViewed","setSharedImagesViewed","click","accept","imageInput","files","ImageGrid","sharing","Image","getProfile","setTitle","change","setChange","Cloudgram","withRouter","App","LandingIntro","path","exact","component","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","authReducer","action","imageReducer","userReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_FIREBASE_API_ID","initializeApp","settings","timestampsInSnapshots","storage","FieldValue","serverTimestamp","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirestore","getStorage","reduxFirestore","rrfProps","config","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.abb8b845.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Name\":\"LandingIntro_Name__H6N1E\",\"Intro\":\"LandingIntro_Intro__Jtn76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGrid\":\"ImageGrid_ImageGrid__1cSAf\",\"Image\":\"ImageGrid_Image__-_SGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1VHv9\",\"H3\":\"App_H3__rRqoP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackgroundImage\":\"BackgroundImage_BackgroundImage__rUsbM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signin\":\"Signin_Signin__kDmPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__GP3H5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2RQo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signup\":\"Signup_Signup__24YIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cloudgram\":\"Cloudgram_Cloudgram__1dutN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"ModalSharing_Modal__2Qfar\",\"ModalSharing\":\"ModalSharing_ModalSharing__2pLbd\",\"selectedImage\":\"ModalSharing_selectedImage__2h-HV\",\"Controls\":\"ModalSharing_Controls__2njIT\",\"button\":\"ModalSharing_button__2pyzw\",\"Modimg\":\"ModalSharing_Modimg__39ris\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Toolbar_Header__BO0BE\",\"NavLink\":\"Toolbar_NavLink__1WtYe\",\"active\":\"Toolbar_active__2s3M8\"};","import React from 'react';\r\nimport classes from './BackgroundImage.module.css';\r\n\r\nconst backgroundImage=()=> {\r\n    return (\r\n        <div className={classes.BackgroundImage}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default backgroundImage;\r\n","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from '../../Store/actions/authActions';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Toolbar = ({ isLoggedIn, name, signOut }) => {\r\n    return (\r\n        <header className={classes.Header}>\r\n            <h2><NavLink className={classes.NavLink} to='/cloudgram' id='cloudgram' >Cloudgram</NavLink></h2>\r\n            <nav>\r\n                <ul>\r\n                    {!isLoggedIn &&\r\n                        <>\r\n                            <li><NavLink to='/login' id='login' className={classes.NavLink} >Login</NavLink></li>\r\n                            <li><NavLink to='/signup' id='signup' className={classes.NavLink} >Signup</NavLink></li>\r\n                        </>\r\n                    }\r\n\r\n                    {isLoggedIn &&\r\n                        <>\r\n                            {name && <li className={classes.NavLink} >{name.toUpperCase()}</li>}\r\n                            <li> <NavLink to='/login' id='logout' onClick={() => signOut()} className={classes.NavLink} >Logout</NavLink></li>\r\n                        </>\r\n                    }\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.firebase.auth.uid,\r\n        name: state.auth.userData?.name\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);","\nexport const signIn = () => {\n\treturn (dispatch, getState, { getFirebase }) => {\n\t\tconst firebase = getFirebase();\n\t\tconst auth = firebase.auth();\n\t\tconst firestore = firebase.firestore()\n\t\tconst googleProvider = new firebase.auth.GoogleAuthProvider()\n\t\tauth.signInWithPopup(googleProvider)\n\t\t\t.then((res) => {\n\t\t\t\tconst uid = res.user.uid\n\t\t\t\tconst loggedUser = {\n\t\t\t\t\temail: res.user.email,\n\t\t\t\t\tname: res.user.displayName,\n\t\t\t\t}\n\t\t\t\tfirestore.collection('users').doc(res.user.uid).get()\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (!res.data()) {\n\t\t\t\t\t\t\tauth.sendPasswordResetEmail(loggedUser.email)\n\t\t\t\t\t\t\tfirestore.collection('users').doc(uid).set(loggedUser)\n\t\t\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\t\t\tdispatch({ type: 'GOOGLE_LOGIN_SUCCESS', data: loggedUser });\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdispatch({ type: 'GOOGLE_LOGIN_SUCCESS', data: res.data() });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tdispatch({ type: 'GOOGLE_LOGIN_ERROR', err });\n\t\t\t})\n\t}\n}\n\nexport const signInEmailPassword = (creds) => {\n\treturn (dispatch, getState, { getFirebase }) => {\n\t\tconst firebase = getFirebase();\n\t\tfirebase.auth().signInWithEmailAndPassword(creds.email, creds.password)\n\t\t\t.then((res) => {\n\t\t\t\tfirebase.firestore().collection('users').doc(res.user.uid).get()\n\t\t\t\t\t.then(res => dispatch({ type: 'SIGN_IN_SUCCESS', data: res.data() }))\n\t\t\t\t\t.catch(err => console.log(err))\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tdispatch({ type: 'SIGN_IN_ERROR', err })\n\t\t\t})\n\t}\n}\n\nexport const signOut = () => {\n\treturn (dispatch, getState, { getFirebase }) => {\n\t\tgetFirebase().auth().signOut()\n\t\t\t.then(() => {\n\t\t\t\tdispatch({ type: 'SIGNOUT_SUCCESS' })\n\t\t\t})\n\t}\n}\n\nexport const signUp = (newUser) => {\n\treturn (dispatch, getState, { getFirebase }) => {\n\t\tconst firebase = getFirebase();\n\t\tfirebase.auth().createUserWithEmailAndPassword(\n\t\t\tnewUser.email,\n\t\t\tnewUser.password\n\t\t).then(res => {\n\t\t\tfirebase.firestore().collection('users').doc(res.user.uid).set({\n\t\t\t\tname: newUser.fullname,\n\t\t\t\temail: newUser.email,\n\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tdispatch({ type: 'SIGNUP_SUCCESS', data: newUser });\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t});\n\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err.message)\n\t\t\t\tdispatch({ type: 'SIGNUP_ERROR', err });\n\t\t\t})\n\t}\n}\n\nexport const getProfile = () => {\n\treturn (dispatch, getState, { getFirebase }) => {\n\t\tconst firebase = getFirebase();\n\t\tconst uid = getState().firebase.auth.uid\n\t\tfirebase.firestore().collection('users').doc(uid).get()\n\t\t\t.then(res => {\n\t\t\t\tdispatch({ type: 'GET_PROFILE_SUCCESS', data: res.data() })\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tdispatch({ type: 'GET_PROFILE_ERROR' })\n\t\t\t})\n\t}\n}","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button=(props)=> {\r\n    return (\r\n        <button className={classes.Button} type={props.type} onClick={(e)=>props.onClick(e)} >{props.children}</button>\r\n    )\r\n}\r\n\r\nexport default button;","import React from 'react'\r\nimport classes from './Input.module.css';\r\n\r\nconst input=(props)=> {\r\n    return (\r\n        <input className={classes.Input} type={props.type} onChange={props.onChange} id={props.name} name={props.name} placeholder={props.name} />\r\n    )\r\n}\r\nexport default input;","import React, { useState } from 'react'\r\nimport classes from './Signin.module.css';\r\nimport Button from '../../UI/Button/Button';\r\nimport Input from '../../UI/Input/Input';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { signIn, signInEmailPassword } from '../../../Store/actions/authActions';\r\n\r\nconst Signin = ({ authError, signIn, googleSignIn }) => {\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const handleChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        signIn(state);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Signin} >\r\n            <h3>Sign in to Your Account</h3>\r\n            <form>\r\n                <Input type=\"email\" name=\"email\" onChange={handleChange} />\r\n                <Input type=\"password\" name=\"password\" onChange={handleChange} />\r\n                <Button type=\"submit\" onClick={handleSubmit}>Signin</Button>\r\n                {authError ? <p>{authError}</p> : null}\r\n            </form>\r\n            <p>OR</p>\r\n            <Button onClick={() => googleSignIn()} >Sign In With Google</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signInEmailPassword(creds)),\r\n        googleSignIn: () => dispatch(signIn())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)","import React, { useState } from 'react'\r\nimport classes from './Signup.module.css';\r\nimport Button from '../../UI/Button/Button';\r\nimport Input from '../../UI/Input/Input';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../../Store/actions/authActions';\r\n\r\nconst Signup = ({ signUp, signupError }) => {\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: '',\r\n        fullname: ''\r\n    });\r\n    const [error, setError] = useState(null)\r\n\r\n    const handleChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const values = Object.values(state)\r\n\r\n        let canSubmit = true;\r\n\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (!values[i]) {\r\n                canSubmit = false\r\n            }\r\n        }\r\n        canSubmit && setError(null)\r\n        canSubmit && signUp(state);\r\n\r\n        !canSubmit && setError('Form not filled')\r\n    }\r\n    return (\r\n        <div className={classes.Signup}>\r\n            <h3>Create an Account</h3>\r\n            <form>\r\n                <Input type=\"text\" name=\"fullname\" onChange={handleChange} />\r\n                <Input type=\"email\" name=\"email\" onChange={handleChange} />\r\n                <Input type=\"password\" name=\"password\" onChange={handleChange} />\r\n                <Button type=\"submit\" onClick={handleSubmit}>Signup</Button>\r\n                {signupError && <p>{signupError}</p>}\r\n                {error ? <p>{error}</p> : null}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        signupError: state.auth.signupError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (creds) => dispatch(signUp(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)","import React from 'react';\r\nimport classes from './LandingIntro.module.css';\r\n\r\nconst landingIntro=()=> {\r\n    return (\r\n        <>\r\n            <div className={classes.Name}>\r\n                <h1>CLOUDGRAM</h1>\r\n                <h4>In these moments, time stood still.....</h4>\r\n            </div>\r\n            <div className={classes.Intro}>\r\n                <p>Save your captured moments</p>\r\n                <p>Share pictures with your friends</p>\r\n                <p>Upload unlimited pictures</p>\r\n                <p>Caption your photos</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default landingIntro;","import React from 'react';\r\nimport classes from './ModalGallery.module.css'\r\n\r\nconst modalGallery = (props) => {\r\n    document.getElementById('root').style.opacity = '0.8'\r\n    const clickHandler = (e) => {\r\n        if (e.target.classList.contains(classes.ModalGallery)) {\r\n            props.setSelectedImage(null);\r\n            document.getElementById('root').style.opacity = '1'\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.ModalGallery} onClick={clickHandler} >\r\n            <div className={classes.Container}>\r\n                <img src={props.selectedImage.imagePath} alt='' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default modalGallery;\r\n","import axios from 'axios'\r\n\r\nexport const imageUpload = (image) => {\r\n    return (dispatch, getState) => {\r\n        const userEmail = getState().firebase.auth.email;\r\n        let formData = new FormData();\r\n        formData.append('imagePath', image)\r\n        formData.append('userEmail', userEmail)\r\n        axios.post('https://cloudgram.herokuapp.com/api/images', formData)\r\n            .then((res) => {\r\n                let images = getState().image.images;\r\n                images = [res.data].concat(images);\r\n                dispatch({ type: 'IMAGE_UPLOAD_SUCCESS', images })\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: 'IMAGE_UPLOAD_ERROR' })\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const getImages = (shared) => {\r\n    return (dispatch, getState) => {\r\n        const userEmail = getState().firebase.auth.email;\r\n        axios.get('https://cloudgram.herokuapp.com/api/images')\r\n            .then((res) => {\r\n                let imagesList = res.data\r\n                if (!shared) {\r\n                    imagesList = imagesList.filter((imageData => {\r\n                        return (imageData.userEmail === userEmail)\r\n                    }))\r\n                }\r\n                else {\r\n                    imagesList = imagesList.filter(imageData => {\r\n                        const sharedToUser = imageData.sharedTo.filter(user => {\r\n                            return user === userEmail\r\n                        })\r\n                        if (sharedToUser[0]) return true\r\n                        return false\r\n                    })\r\n                }\r\n                dispatch({ type: 'GET_IMAGES_SUCCESS', images: imagesList })\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: 'GET_IMAGES_ERROR' })\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateImage = (imageUpdate) => {\r\n    return (dispatch, getState) => {\r\n        axios.put('https://cloudgram.herokuapp.com/api/images/' + imageUpdate._id, imageUpdate)\r\n            .then(res => {\r\n                dispatch({ type: 'UPDATE_IMAGE_SUCCESS', updatedImage: res.data })\r\n            })\r\n            .catch(err => {\r\n                dispatch({ type: 'UPDARE_IMAGE_ERROR', err })\r\n            })\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport classes from './ModalSharing.module.css';\r\nimport Input from '../UI/Input/Input'\r\nimport { getUsers } from '../../Store/actions/userActions';\r\nimport { connect } from 'react-redux';\r\nimport { getImages, updateImage } from '../../Store/actions/imageActions';\r\n\r\n\r\nconst ModalSharing = ({ setSharing, images, currentUser, users, getUsers, updateImage, getImages }) => {\r\n    const [selectedImage, setSelectedImage] = useState(null)\r\n    const [email, setEmail] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const clickHandler = (e) => {\r\n        if (e.target.classList.contains(classes.Modal))\r\n            setSharing(false)\r\n    }\r\n\r\n    const selectImage = (i) => {\r\n        if (selectedImage) {\r\n            const previousSelect = document.getElementsByClassName(classes.selectedImage)\r\n            if (previousSelect[0]) { previousSelect[0].classList.remove(classes.selectedImage) }\r\n            if (i._id === selectedImage._id)\r\n                return true\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const handleShare = () => {\r\n        if (selectedImage) {\r\n            if (email !== currentUser && !selectedImage.sharedTo.includes(email)) {\r\n                if (users.includes(email)) {\r\n                    const previousShared = selectedImage.sharedTo\r\n                    const newSharedTo = previousShared.concat([email])\r\n                    const updatedData = {\r\n                        ...selectedImage,\r\n                        sharedTo: newSharedTo\r\n                    }\r\n                    updateImage(updatedData)\r\n                    setTimeout(() => {\r\n                        setSharing(false)\r\n                        getImages()\r\n                    }, 2000)\r\n                }\r\n                else {\r\n                    setError('User does not exist!')\r\n                }\r\n            }\r\n            else {\r\n                setError('Sharing not allowed')\r\n            }\r\n        }\r\n        else {\r\n            setError('Please select an Image!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Modal} onClick={clickHandler} >\r\n            <div id='modalSharing' className={classes.ModalSharing}>\r\n                <p>{error ? error : 'Select a single image'}</p>\r\n                <div className={classes.Controls}>\r\n                    <Input onChange={handleChange} name='Email' />\r\n                    <button onClick={handleShare} className={classes.button} >Share</button>\r\n                </div>\r\n                <div className={classes.Modimg}>\r\n                    {images && images.map((i, index) => {\r\n                        return <img src={i.imagePath} className={selectImage(i) && classes.selectedImage} onClick={() => setSelectedImage(i)} alt='' key={index} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.user.users,\r\n        currentUser: state.firebase.auth.email\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getUsers: () => dispatch(getUsers()),\r\n        updateImage: (updatedData) => dispatch(updateImage(updatedData)),\r\n        getImages: () => dispatch(getImages())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalSharing);\r\n","export const getUsers = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.firestore().collection('users').get()\r\n            .then(res => {\r\n                let users = res.docs.map(doc => doc.data())\r\n                users = users.map(user => user.email)\r\n                dispatch({ type: 'GET_USERS_SUCCESS', users })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch({ type: 'GET_USERS_ERROR', err })\r\n            })\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport classes from \"./UploadImage.module.css\";\r\n\r\nimport { connect } from 'react-redux'\r\nimport { imageUpload } from '../../Store/actions/imageActions'\r\n\r\nconst UploadImage = ({ upload, title, uploadError, setSharing }) => {\r\n    const [image, setImage] = useState(null)\r\n    const [sharedImagesViewed, setSharedImagesViewed] = useState(false)\r\n\r\n    const handleUploadClick = () => {\r\n        document.getElementById('upload').click()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (title === 'Show My Images') setSharedImagesViewed(true)\r\n        else setSharedImagesViewed(false)\r\n        // eslint-disable-next-line\r\n    }, [title])\r\n\r\n    const handleImageInput = (e) => {\r\n        setImage(e.target.files[0])\r\n    }\r\n\r\n    const handleShare = () => {\r\n        setSharing(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        image && upload(image)\r\n        // eslint-disable-next-line\r\n    }, [image])\r\n\r\n    return (\r\n        <div className={classes.upload} >\r\n            {!sharedImagesViewed && <button className={classes.button} onClick={handleUploadClick} >\r\n                Upload Image\r\n                <input id='upload' type='file' accept='image/jpeg,image/png' className={classes.imageInput} onChange={handleImageInput} />\r\n            </button>\r\n            }\r\n            <button onClick={handleShare} className={classes.button}>Share Image</button>\r\n            {uploadError && <p>{uploadError}</p>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        uploadError: state.image.err,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        upload: (image) => dispatch(imageUpload(image))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadImage)\r\n","import React, { useState } from 'react';\r\nimport ModalGallery from '../Modal/ModalGallery';\r\nimport ModalSharing from '../Modal/ModalSharing';\r\nimport UploadImage from '../UploadImage/UploadImage';\r\nimport classes from './ImageGrid.module.css';\r\n\r\n\r\nconst ImageGrid = ({ images, title }) => {\r\n    const [sharing, setSharing] = useState(false)\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n\r\n    return (\r\n        <div className={classes.ImageGrid} >\r\n\r\n            <UploadImage title={title} sharing={sharing} setSharing={setSharing} />\r\n            {sharing && <ModalSharing images={images} setSharing={setSharing} />}\r\n            {selectedImage && <ModalGallery selectedImage={selectedImage} setSelectedImage={setSelectedImage} />}\r\n            <div>\r\n                {images && images.map((i, index) => {\r\n                    return <img src={i.imagePath} alt='' className={classes.Image} key={index} onClick={() => setSelectedImage(i)} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ImageGrid from '../Components/ImageGrid/ImageGrid';\r\nimport Button from '../Components/UI/Button/Button';\r\nimport classes from './Cloudgram.module.css';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getImages } from '../Store/actions/imageActions'\r\nimport { getProfile } from '../Store/actions/authActions';\r\n\r\nconst Cloudgram = ({ images, getImages, getProfile }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [change, setChange] = useState(true);\r\n\r\n\r\n\r\n    const changeImagesHandler = () => {\r\n        setChange(!change);\r\n    }\r\n    useEffect(() => {\r\n        getImages(false);\r\n        getProfile()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (change) {\r\n            setTitle('Show Shared Images');\r\n            getImages(false)\r\n        }\r\n        else {\r\n            setTitle('Show My Images');\r\n            getImages(true)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [change])\r\n\r\n    return (\r\n        <div className={classes.Cloudgram} >\r\n            <Button onClick={changeImagesHandler} id='controlImages' >{title}</Button>\r\n            <hr />\r\n            <ImageGrid title={title} images={images} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        images: state.image.images\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getImages: (shared) => dispatch(getImages(shared)),\r\n        getProfile: () => dispatch(getProfile())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cloudgram);","import React from 'react';\nimport classes from './App.module.css';\nimport BackgroundImage from './Components/BackgroundImage/BackgroundImage';\nimport Toolbar from './Components/Toolbar/Toolbar';\nimport { withRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Signin from './Components/Forms/Signin/Signin';\nimport Signup from './Components/Forms/Signup/Signup';\nimport LandingIntro from './Components/LandingIntro/LandingIntro';\nimport Cloudgram from './Container/Cloudgram';\nimport { connect } from 'react-redux';\n\nconst App = ({ isLoggedIn }) => {\n\n  return (\n    <div className={classes.App}>\n      <Toolbar />\n      <BackgroundImage />\n      {!isLoggedIn &&\n        <>\n          <LandingIntro />\n\n          <Switch>\n\n            <Route path='/login' exact component={Signin} />\n            <Route path='/signup' exact component={Signup} />\n            <Redirect from='/' to='/cloudgram' />\n\n          </Switch>\n        </>\n      }\n\n      {isLoggedIn &&\n        <Switch>\n\n          <Route path='/home' exact component={Cloudgram} />\n          <Redirect from='/' to='/home' />\n\n        </Switch>\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.firebase.auth.uid\n  }\n}\n\nexport default connect(mapStateToProps, null)(withRouter(App));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n\tauthError: null,\n\tuserData: null,\n\tsignupError: null\n}\n\nconst authReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase 'GOOGLE_LOGIN_ERROR':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: action.err.message\n\t\t\t}\n\t\tcase 'GOOGLE_LOGIN_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: null,\n\t\t\t\tuserData: action.data\n\t\t\t}\n\t\tcase 'SIGN_IN_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: null,\n\t\t\t\tuserData: action.data\n\t\t\t}\n\t\tcase 'SIGN_IN_ERROR':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: action.err.message\n\t\t\t}\n\t\tcase 'SIGNOUT_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserData: null\n\t\t\t}\n\t\tcase 'SIGNUP_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: null,\n\t\t\t\tuserData: action.data\n\t\t\t}\n\t\tcase 'SIGNUP_ERROR':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsignupError: action.err.message\n\t\t\t}\n\t\tcase 'GET_PROFILE_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserData: action.data\n\t\t\t}\n\t\tcase 'GET_PROFILE_ERROR':\n\t\t\treturn state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default authReducer","const initState = {\r\n    images: [],\r\n    err: null\r\n}\r\n\r\nconst imageReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'IMAGE_UPLOAD_ERROR':\r\n            return {\r\n                ...state,\r\n                err: 'Error uploading image'\r\n            }\r\n        case 'IMAGE_UPLOAD_SUCCESS':\r\n            return {\r\n                ...state,\r\n                images: action.images\r\n            }\r\n        case 'GET_IMAGES_SUCCESS':\r\n            return {\r\n                ...state,\r\n                images: action.images,\r\n            }\r\n        case 'GET_IMAGES_ERROR':\r\n            return {\r\n                ...state,\r\n                err: 'Error retrieving images'\r\n            }\r\n        case 'UPDATE_IMAGE_SUCCESS':\r\n            return state\r\n        case 'UPDATE_IMAGE_ERROR':\r\n            return {\r\n                ...state,\r\n                err: 'Sharing failed'\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default imageReducer","const initState = {\r\n    users: []\r\n}\r\n\r\nconst userReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_USERS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            }\r\n        case 'GET_USERS_ERROR':\r\n            return {\r\n                ...state,\r\n                err: 'Error retrieving users'\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","import authReducer          from './authReducer'\r\nimport { combineReducers }  from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer }  from 'react-redux-firebase'\r\nimport imageReducer from './imageReducer';\r\nimport userReducer from './userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tauth      : authReducer,\r\n\timage\t  : imageReducer,\r\n\tuser\t  : userReducer,\r\n\tfirestore : firestoreReducer,\r\n\tfirebase  : firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_API_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({\r\n    timestampsInSnapshots: true\r\n});\r\nconst storage = firebase.storage();\r\nconst timeStamp = firebase.firestore.FieldValue.serverTimestamp;\r\nexport { timeStamp, storage, firebaseConfig };\r\nexport default firebase;","import {\r\n\tcreateStore,\r\n\tapplyMiddleware,\r\n\tcompose\r\n} from 'redux'\r\nimport rootReducer                            from './reducers/rootReducer'\r\nimport thunk \t\t                       from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore }    from 'redux-firestore'\r\nimport { getFirebase } from 'react-redux-firebase'\r\nimport firebase                            from '../Firebase/Config'\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcompose(\r\n\t\tapplyMiddleware(\r\n\t\t\tthunk.withExtraArgument({\r\n\t\t\t\tgetFirebase,\r\n\t\t\t\tgetFirestore,\r\n\t\t\t\tgetStorage:firebase.storage()\r\n\t\t\t})\r\n\t\t),\r\n\t\treduxFirestore(firebase),\r\n\t)\r\n);\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\"\nimport store from \"./Store/index\";\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport firebase from 'firebase/app';\nimport { firebaseConfig } from './Firebase/Config';\n\nconst rrfProps = {\n  firebase,\n  config: firebaseConfig,\n  dispatch: store.dispatch\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider  {...rrfProps}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageInput\":\"UploadImage_imageInput__2-Juj\",\"upload\":\"UploadImage_upload__3Tk5n\",\"button\":\"UploadImage_button__3O0Yw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalGallery\":\"ModalGallery_ModalGallery__1I9QI\",\"Container\":\"ModalGallery_Container__aNWDM\"};"],"sourceRoot":""}