{"version":3,"sources":["Components/LandingIntro/LandingIntro.module.css","Components/ImageGrid/ImageGrid.module.css","App.module.css","Components/BackgroundImage/BackgroundImage.module.css","Components/Forms/Signin/Signin.module.css","Components/UI/Button/Button.module.css","Components/UI/Input/Input.module.css","Components/Forms/Signup/Signup.module.css","Container/Cloudgram.module.css","Components/Modal/ModalDelete/ModalDelete.module.css","Components/Modal/ModalSharing/ModalSharing.module.css","Components/UploadImage/UploadImage.module.css","Components/BackgroundImage/BackgroundImage.js","Components/Toolbar/Toolbar.js","Store/actions/authActions.js","Components/UI/Button/Button.js","Components/UI/Input/Input.js","Components/Forms/Signin/Signin.js","Components/Forms/Signup/Signup.js","Components/LandingIntro/LandingIntro.js","Components/Modal/ModalDelete/ModalDelete.js","Store/actions/imageActions.js","Components/Modal/ModalGallery/ModalGallery.js","Components/Modal/ModalSharing/ModalSharing.js","Store/actions/userActions.js","Components/UploadImage/UploadImage.js","Components/ImageGrid/ImageGrid.js","Container/Cloudgram.js","App.js","reportWebVitals.js","Store/reducers/authReducer.js","Store/reducers/imageReducer.js","Store/reducers/userReducer.js","Store/reducers/rootReducer.js","Firebase/Config.js","Store/index.js","index.js","Components/Toolbar/Toolbar.module.css","Components/Modal/ModalGallery/ModalGallery.module.css"],"names":["module","exports","backgroundImage","className","classes","BackgroundImage","connect","state","isLoggedIn","firebase","auth","uid","name","userData","dispatch","signOut","getState","getFirebase","then","type","useState","userName","setUserName","Header","NavLink","to","id","toUpperCase","onClick","button","props","Button","e","children","input","Input","onChange","placeholder","authError","signIn","creds","signInWithEmailAndPassword","email","password","res","firestore","collection","doc","user","get","data","catch","err","console","log","signInEmailPassword","googleSignIn","googleProvider","GoogleAuthProvider","signInWithPopup","loggedUser","displayName","sendPasswordResetEmail","set","setState","handleChange","target","value","Signin","preventDefault","signupError","signUp","newUser","createUserWithEmailAndPassword","fullname","message","error","setError","Signup","values","Object","canSubmit","i","length","landingIntro","Name","Intro","currentUser","deleteImage","imageId","axios","delete","newImagesList","image","images","filter","_id","setDeleting","selectedImage","setSelectedImage","text","setText","selectImage","previousSelect","document","getElementsByClassName","classList","remove","Modal","contains","ModalSharing","Controls","setTimeout","Modimg","map","index","src","imageUrl","alt","modalGallery","getElementById","style","opacity","ModalGallery","Container","users","getUsers","docs","shareImage","shareData","post","setSharing","setEmail","useEffect","includes","userEmail","shared","uploadError","upload","setProgress","storageRef","storage","ref","Math","random","lastModified","put","on","snap","percentage","bytesTransferred","totalBytes","a","getDownloadURL","concat","imageUpload","title","setImage","progress","sharedImagesViewed","setSharedImagesViewed","width","click","accept","imageInput","files","ImageGrid","sharing","deleting","ModalDelete","Image","getImages","imagesList","imageData","getProfile","setTitle","change","setChange","Cloudgram","withRouter","App","LandingIntro","path","exact","component","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","authReducer","action","imageReducer","userReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_FIREBASE_API_ID","initializeApp","settings","timestampsInSnapshots","FieldValue","serverTimestamp","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirestore","getStorage","reduxFirestore","rrfProps","config","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.47f1295e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Name\":\"LandingIntro_Name__H6N1E\",\"Intro\":\"LandingIntro_Intro__Jtn76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGrid\":\"ImageGrid_ImageGrid__1cSAf\",\"Image\":\"ImageGrid_Image__-_SGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1VHv9\",\"H3\":\"App_H3__rRqoP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackgroundImage\":\"BackgroundImage_BackgroundImage__rUsbM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signin\":\"Signin_Signin__kDmPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__GP3H5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2RQo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signup\":\"Signup_Signup__24YIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cloudgram\":\"Cloudgram_Cloudgram__1dutN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"ModalDelete_Modal__2v0uz\",\"ModalSharing\":\"ModalDelete_ModalSharing__u4f0S\",\"selectedImage\":\"ModalDelete_selectedImage__24uHH\",\"Controls\":\"ModalDelete_Controls__PPUyy\",\"button\":\"ModalDelete_button__vOdZs\",\"Modimg\":\"ModalDelete_Modimg__YBwAg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"ModalSharing_Modal__1AqvJ\",\"ModalSharing\":\"ModalSharing_ModalSharing__2KWx6\",\"selectedImage\":\"ModalSharing_selectedImage__qiW1F\",\"Controls\":\"ModalSharing_Controls__25brp\",\"button\":\"ModalSharing_button__1MI4k\",\"Modimg\":\"ModalSharing_Modimg__1w691\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageInput\":\"UploadImage_imageInput__2-Juj\",\"upload\":\"UploadImage_upload__3Tk5n\",\"progress\":\"UploadImage_progress__282oP\",\"button\":\"UploadImage_button__3O0Yw\"};","import React from 'react';\r\nimport classes from './BackgroundImage.module.css';\r\n\r\nconst backgroundImage=()=> {\r\n    return (\r\n        <div className={classes.BackgroundImage}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default backgroundImage;\r\n","import React, { useState } from 'react';\r\nimport classes from './Toolbar.module.css';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from '../../Store/actions/authActions';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Toolbar = ({ isLoggedIn, name, signOut }) => {\r\n    const [userName, setUserName] = useState(null)\r\n    if (name && userName !== name)\r\n        setUserName(name)\r\n\r\n    return (\r\n        <header className={classes.Header}>\r\n            <h2><NavLink className={classes.NavLink} to='/cloudgram' id='cloudgram' >Cloudgram</NavLink></h2>\r\n            <nav>\r\n                <ul>\r\n                    {!isLoggedIn &&\r\n                        <>\r\n                            <li><NavLink to='/login' id='login' className={classes.NavLink} >Login</NavLink></li>\r\n                            <li><NavLink to='/signup' id='signup' className={classes.NavLink} >Signup</NavLink></li>\r\n                        </>\r\n                    }\r\n\r\n                    {isLoggedIn &&\r\n                        <>\r\n                            {userName && <li className={classes.NavLink} >{userName.toUpperCase()}</li>}\r\n                            <li> <NavLink to='/login' id='logout' onClick={() => signOut()} className={classes.NavLink} >Logout</NavLink></li>\r\n                        </>\r\n                    }\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.firebase.auth.uid,\r\n        name: state.auth.userData?.name\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);","export const signIn = () => {\n\treturn (dispatch, getState, { getFirebase }) => {\n\t\tconst firebase = getFirebase();\n\t\tconst auth = firebase.auth();\n\t\tconst firestore = firebase.firestore()\n\t\tconst googleProvider = new firebase.auth.GoogleAuthProvider()\n\t\tauth.signInWithPopup(googleProvider)\n\t\t\t.then((res) => {\n\t\t\t\tconst uid = res.user.uid\n\t\t\t\tconst loggedUser = {\n\t\t\t\t\temail: res.user.email,\n\t\t\t\t\tname: res.user.displayName,\n\t\t\t\t}\n\t\t\t\tfirestore.collection('users').doc(res.user.uid).get()\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (!res.data()) {\n\t\t\t\t\t\t\tauth.sendPasswordResetEmail(loggedUser.email)\n\t\t\t\t\t\t\tfirestore.collection('users').doc(uid).set(loggedUser)\n\t\t\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\t\t\tdispatch({ type: 'GOOGLE_LOGIN_SUCCESS', data: loggedUser });\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdispatch({ type: 'GOOGLE_LOGIN_SUCCESS', data: res.data() });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tdispatch({ type: 'GOOGLE_LOGIN_ERROR', err });\n\t\t\t})\n\t}\n}\n\nexport const signInEmailPassword = (creds) => {\n\treturn (dispatch, getState, { getFirebase }) => {\n\t\tconst firebase = getFirebase();\n\t\tfirebase.auth().signInWithEmailAndPassword(creds.email, creds.password)\n\t\t\t.then((res) => {\n\t\t\t\tfirebase.firestore().collection('users').doc(res.user.uid).get()\n\t\t\t\t\t.then(res => dispatch({ type: 'SIGN_IN_SUCCESS', data: res.data() }))\n\t\t\t\t\t.catch(err => console.log(err))\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tdispatch({ type: 'SIGN_IN_ERROR', err })\n\t\t\t})\n\t}\n}\n\nexport const signOut = () => {\n\treturn (dispatch, getState, { getFirebase }) => {\n\t\tgetFirebase().auth().signOut()\n\t\t\t.then(() => {\n\t\t\t\tdispatch({ type: 'SIGNOUT_SUCCESS' })\n\t\t\t})\n\t}\n}\n\nexport const signUp = (newUser) => {\n\treturn (dispatch, getState, { getFirebase }) => {\n\t\tconst firebase = getFirebase();\n\t\tfirebase.auth().createUserWithEmailAndPassword(\n\t\t\tnewUser.email,\n\t\t\tnewUser.password\n\t\t).then(res => {\n\t\t\tfirebase.firestore().collection('users').doc(res.user.uid).set({\n\t\t\t\tname: newUser.fullname,\n\t\t\t\temail: newUser.email,\n\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tdispatch({ type: 'SIGNUP_SUCCESS', data: { name: newUser.name, email: newUser.email } });\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t});\n\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err.message)\n\t\t\t\tdispatch({ type: 'SIGNUP_ERROR', err });\n\t\t\t})\n\t}\n}\n\nexport const getProfile = () => {\n\treturn (dispatch, getState, { getFirebase }) => {\n\t\tconst firebase = getFirebase();\n\t\tconst uid = getState().firebase.auth.uid\n\t\tfirebase.firestore().collection('users').doc(uid).get()\n\t\t\t.then(res => {\n\t\t\t\tdispatch({ type: 'GET_PROFILE_SUCCESS', data: res.data() })\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tdispatch({ type: 'GET_PROFILE_ERROR' })\n\t\t\t})\n\t}\n}","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button=(props)=> {\r\n    return (\r\n        <button className={classes.Button} type={props.type} onClick={(e)=>props.onClick(e)} >{props.children}</button>\r\n    )\r\n}\r\n\r\nexport default button;","import React from 'react'\r\nimport classes from './Input.module.css';\r\n\r\nconst input=(props)=> {\r\n    return (\r\n        <input className={classes.Input} type={props.type} onChange={props.onChange} id={props.name} name={props.name} placeholder={props.name} />\r\n    )\r\n}\r\nexport default input;","import React, { useState } from 'react'\r\nimport classes from './Signin.module.css';\r\nimport Button from '../../UI/Button/Button';\r\nimport Input from '../../UI/Input/Input';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { signIn, signInEmailPassword } from '../../../Store/actions/authActions';\r\n\r\nconst Signin = ({ authError, signIn, googleSignIn }) => {\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const handleChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        signIn(state);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Signin} >\r\n            <h3>Sign in to Your Account</h3>\r\n            <form>\r\n                <Input type=\"email\" name=\"email\" onChange={handleChange} />\r\n                <Input type=\"password\" name=\"password\" onChange={handleChange} />\r\n                <Button type=\"submit\" onClick={handleSubmit}>Signin</Button>\r\n                {authError ? <p>{authError}</p> : null}\r\n            </form>\r\n            <p>OR</p>\r\n            <Button onClick={() => googleSignIn()} >Sign In With Google</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signInEmailPassword(creds)),\r\n        googleSignIn: () => dispatch(signIn())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)","import React, { useState } from 'react'\r\nimport classes from './Signup.module.css';\r\nimport Button from '../../UI/Button/Button';\r\nimport Input from '../../UI/Input/Input';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../../Store/actions/authActions';\r\n\r\nconst Signup = ({ signUp, signupError }) => {\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: '',\r\n        fullname: ''\r\n    });\r\n    const [error, setError] = useState(null)\r\n\r\n    const handleChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const values = Object.values(state)\r\n\r\n        let canSubmit = true;\r\n\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (!values[i]) {\r\n                canSubmit = false\r\n            }\r\n        }\r\n        canSubmit && setError(null)\r\n        canSubmit && signUp(state);\r\n\r\n        !canSubmit && setError('Form not filled')\r\n    }\r\n    return (\r\n        <div className={classes.Signup}>\r\n            <h3>Create an Account</h3>\r\n            <form>\r\n                <Input type=\"text\" name=\"fullname\" onChange={handleChange} />\r\n                <Input type=\"email\" name=\"email\" onChange={handleChange} />\r\n                <Input type=\"password\" name=\"password\" onChange={handleChange} />\r\n                <Button type=\"submit\" onClick={handleSubmit}>Signup</Button>\r\n                {signupError && <p>{signupError}</p>}\r\n                {error ? <p>{error}</p> : null}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        signupError: state.auth.signupError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (creds) => dispatch(signUp(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)","import React from 'react';\r\nimport classes from './LandingIntro.module.css';\r\n\r\nconst landingIntro=()=> {\r\n    return (\r\n        <>\r\n            <div className={classes.Name}>\r\n                <h1>CLOUDGRAM</h1>\r\n                <h4>In these moments, time stood still.....</h4>\r\n            </div>\r\n            <div className={classes.Intro}>\r\n                <p>Save your captured moments</p>\r\n                <p>Share pictures with your friends</p>\r\n                <p>Upload unlimited pictures</p>\r\n                <p>Caption your photos</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default landingIntro;","import React, { useState } from 'react';\r\nimport classes from './ModalDelete.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { deleteImage } from '../../../Store/actions/imageActions';\r\n\r\n\r\nconst ModalSharing = ({ setDeleting, images, deleteImage }) => {\r\n    const [selectedImage, setSelectedImage] = useState(null)\r\n    const [text, setText] = useState('Select An Image From Below')\r\n\r\n    const clickHandler = (e) => {\r\n        if (e.target.classList.contains(classes.Modal))\r\n            setDeleting(false)\r\n    }\r\n\r\n    const selectImage = (i) => {\r\n        if (selectedImage) {\r\n            const previousSelect = document.getElementsByClassName(classes.selectedImage)\r\n            if (previousSelect[0]) { previousSelect[0].classList.remove(classes.selectedImage) }\r\n            if (i._id === selectedImage._id)\r\n                return true\r\n        }\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        if (selectedImage) {\r\n            deleteImage(selectedImage._id)\r\n            setTimeout(() => {\r\n                setDeleting(false)\r\n            }, 1000)\r\n        }\r\n        else {\r\n            setText('Please Select An Image To Delete')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Modal} onClick={clickHandler} >\r\n            <div id='modalSharing' className={classes.ModalSharing}>\r\n                <p>{text}</p>\r\n                <div className={classes.Controls}>\r\n                    <button onClick={handleDelete} className={classes.button} >Delete</button>\r\n                </div>\r\n                <div className={classes.Modimg}>\r\n                    {images && images.map((i, index) => {\r\n                        return <img src={i.imageUrl} className={selectImage(i) && classes.selectedImage} onClick={() => setSelectedImage(i)} alt='' key={index} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.firebase.auth.email\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteImage: (imageId) => dispatch(deleteImage(imageId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalSharing);\r\n","import axios from 'axios'\r\n\r\nexport const imageUpload = (image, setProgress) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        const userEmail = getState().firebase.auth.email;\r\n        const storageRef = firebase.storage().ref(image.name +Math.random()+ +image.lastModified);\r\n\r\n        storageRef.put(image).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress?.(percentage);\r\n        }, (err) => {\r\n            dispatch({ type: 'IMAGE_UPLOAD_ERROR', err })\r\n        }, async () => {\r\n            const imageUrl = await storageRef.getDownloadURL();\r\n            axios.post('https://cloudgram.herokuapp.com/api/images', { imageUrl, userEmail, shared: false })\r\n                .then((res) => {\r\n                    let images = getState().image.images;\r\n                    images = [res.data].concat(images);\r\n                    dispatch({ type: 'IMAGE_UPLOAD_SUCCESS', images })\r\n                })\r\n                .catch((err) => {\r\n                    dispatch({ type: 'IMAGE_UPLOAD_ERROR', err })\r\n                })\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const shareImage = (shareData) => {\r\n    return (dispatch, getState) => {\r\n        axios.post('https://cloudgram.herokuapp.com/api/images', shareData)\r\n            .then((res) => {\r\n                dispatch({ type: 'IMAGE_SHARE_SUCCESS' })\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: 'IMAGE_SHARE_ERROR', err })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getImages = (shared) => {\r\n    return (dispatch, getState) => {\r\n        const userEmail = getState().firebase.auth.email;\r\n        axios.get('https://cloudgram.herokuapp.com/api/images')\r\n            .then((res) => {\r\n                let imagesList = res.data\r\n                if (!shared) {\r\n                    imagesList = imagesList.filter(imageData => {\r\n                        return (imageData.userEmail === userEmail && imageData.shared === false)\r\n                    })\r\n                }\r\n                else {\r\n                    imagesList = imagesList.filter(imageData => {\r\n                        return (imageData.userEmail === userEmail && imageData.shared === true)\r\n                    })\r\n                }\r\n\r\n                dispatch({ type: 'GET_IMAGES_SUCCESS', images: imagesList })\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: 'GET_IMAGES_ERROR', err })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteImage = (imageId) => {\r\n    return (dispatch, getState) => {\r\n        axios.delete('https://cloudgram.herokuapp.com/api/images/' + imageId)\r\n            .then(() => {\r\n                let newImagesList = getState().image.images\r\n                newImagesList = newImagesList.filter((image) => image._id !== imageId)\r\n                dispatch({ type: 'DELETE_IMAGE_SUCCESS', images: newImagesList })\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: 'DELETE_IMAGE_ERROR' })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './ModalGallery.module.css'\r\n\r\nconst modalGallery = (props) => {\r\n    document.getElementById('root').style.opacity = '0.8'\r\n    const clickHandler = (e) => {\r\n        if (e.target.classList.contains(classes.ModalGallery)) {\r\n            props.setSelectedImage(null);\r\n            document.getElementById('root').style.opacity = '1'\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.ModalGallery} onClick={clickHandler} >\r\n            <div className={classes.Container}>\r\n                <img src={props.selectedImage.imageUrl} alt='' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default modalGallery;\r\n","import React, { useState, useEffect } from 'react';\r\nimport classes from './ModalSharing.module.css';\r\nimport Input from '../../UI/Input/Input'\r\nimport { getUsers } from '../../../Store/actions/userActions';\r\nimport { connect } from 'react-redux';\r\nimport { shareImage } from '../../../Store/actions/imageActions';\r\n\r\n\r\nconst ModalSharing = ({ setSharing, images, currentUser, users, getUsers, shareImage }) => {\r\n    const [selectedImage, setSelectedImage] = useState(null)\r\n    const [email, setEmail] = useState(null)\r\n    const [text, setText] = useState('Select An Image To Share')\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const clickHandler = (e) => {\r\n        if (e.target.classList.contains(classes.Modal))\r\n            setSharing(false)\r\n    }\r\n\r\n    const selectImage = (i) => {\r\n        if (selectedImage) {\r\n            const previousSelect = document.getElementsByClassName(classes.selectedImage)\r\n            if (previousSelect[0]) { previousSelect[0].classList.remove(classes.selectedImage) }\r\n            if (i._id === selectedImage._id)\r\n                return true\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const handleShare = () => {\r\n        if (selectedImage) {\r\n            if (email !== currentUser) {\r\n                if (users.includes(email)) {\r\n                    const shareData = {\r\n                        imageUrl: selectedImage.imageUrl,\r\n                        userEmail: email,\r\n                        shared: true\r\n                    }\r\n                    shareImage(shareData)\r\n                    setTimeout(() => {\r\n                        setSharing(false)\r\n                    }, 1000)\r\n                }\r\n                else {\r\n                    setText('User does not exist!')\r\n                }\r\n            }\r\n            else {\r\n                setText('Sharing not allowed')\r\n            }\r\n        }\r\n        else {\r\n            setText('Please select an Image!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Modal} onClick={clickHandler} >\r\n            <div id='modalSharing' className={classes.ModalSharing}>\r\n                <p>{text}</p>\r\n                <div className={classes.Controls}>\r\n                    <Input onChange={handleChange} name='Email' />\r\n                    <button onClick={handleShare} className={classes.button} >Share</button>\r\n                </div>\r\n                <div className={classes.Modimg}>\r\n                    {images && images.map((i, index) => {\r\n                        return <img src={i.imageUrl} className={selectImage(i) && classes.selectedImage} onClick={() => setSelectedImage(i)} alt='' key={index} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.user.users,\r\n        currentUser: state.firebase.auth.email\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getUsers: () => dispatch(getUsers()),\r\n        shareImage: (shareData) => dispatch(shareImage(shareData)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalSharing);\r\n","export const getUsers = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.firestore().collection('users').get()\r\n            .then(res => {\r\n                let users = res.docs.map(doc => doc.data())\r\n                users = users.map(user => user.email)\r\n                dispatch({ type: 'GET_USERS_SUCCESS', users })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch({ type: 'GET_USERS_ERROR', err })\r\n            })\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport classes from \"./UploadImage.module.css\";\r\n\r\nimport { connect } from 'react-redux'\r\nimport { imageUpload } from '../../Store/actions/imageActions'\r\n\r\nconst UploadImage = ({ upload, setDeleting, title, uploadError, setSharing }) => {\r\n    const [image, setImage] = useState(null)\r\n    const [progress, setProgress] = useState(null)\r\n    const [sharedImagesViewed, setSharedImagesViewed] = useState(false)\r\n\r\n    const handleUploadClick = () => {\r\n        document.getElementById('upload').click()\r\n    }\r\n\r\n    if (progress) document.getElementsByClassName(classes.progress)[0].style.width = progress + 'vw'\r\n    if (progress === 100) document.getElementsByClassName(classes.progress)[0].style.width = '0'\r\n\r\n    useEffect(() => {\r\n        if (title === 'Show My Images') setSharedImagesViewed(true)\r\n        else setSharedImagesViewed(false)\r\n        // eslint-disable-next-line\r\n    }, [title])\r\n\r\n    const handleImageInput = (e) => {\r\n        setImage(e.target.files[0])\r\n    }\r\n\r\n    const handleShare = () => {\r\n        setSharing(true)\r\n    }\r\n    const handleDelete = () => {\r\n        setDeleting(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (image) {\r\n            upload(image, setProgress)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [image])\r\n\r\n    return (\r\n        <div className={classes.upload} >\r\n            <div>\r\n                {!sharedImagesViewed && <button className={classes.button} onClick={handleUploadClick} >\r\n                    Upload\r\n                <input id='upload' type='file' accept='image/jpeg,image/png' className={classes.imageInput} onChange={handleImageInput} />\r\n                </button>\r\n                }\r\n                <button onClick={handleShare} className={classes.button}>Share</button>\r\n                <button onClick={handleDelete} className={classes.button} >Delete</button>\r\n            </div>\r\n            {uploadError && <p>{uploadError}</p>}\r\n            <p className={classes.progress} ></p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        uploadError: state.image.err,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        upload: (image, setProgress) => dispatch(imageUpload(image, setProgress))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadImage)\r\n","import React, { useState } from 'react';\r\nimport ModalDelete from '../Modal/ModalDelete/ModalDelete';\r\nimport ModalGallery from '../Modal/ModalGallery/ModalGallery';\r\nimport ModalSharing from '../Modal/ModalSharing/ModalSharing';\r\nimport UploadImage from '../UploadImage/UploadImage';\r\nimport classes from './ImageGrid.module.css';\r\n\r\n\r\nconst ImageGrid = ({ images, title }) => {\r\n    const [sharing, setSharing] = useState(false)\r\n    const [deleting, setDeleting] = useState(false)\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n\r\n    return (\r\n        <div className={classes.ImageGrid} >\r\n\r\n            <UploadImage setDeleting={setDeleting} title={title} sharing={sharing} setSharing={setSharing} />\r\n            {sharing && <ModalSharing images={images} setSharing={setSharing} />}\r\n            {selectedImage && <ModalGallery selectedImage={selectedImage} setSelectedImage={setSelectedImage} />}\r\n            {deleting && <ModalDelete setDeleting={setDeleting} images={images} selectedImage={selectedImage} setSelectedImage={setSelectedImage} />}\r\n            <div>\r\n                {images && images.map((i, index) => {\r\n                    return <img src={i.imageUrl} alt='' className={classes.Image} key={index} onClick={() => setSelectedImage(i)} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ImageGrid from '../Components/ImageGrid/ImageGrid';\r\nimport Button from '../Components/UI/Button/Button';\r\nimport classes from './Cloudgram.module.css';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getImages } from '../Store/actions/imageActions'\r\nimport { getProfile } from '../Store/actions/authActions';\r\n\r\nconst Cloudgram = ({ images, getImages, getProfile }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [change, setChange] = useState(true);\r\n\r\n\r\n\r\n    const changeImagesHandler = () => {\r\n        setChange(!change);\r\n    }\r\n    useEffect(() => {\r\n        getImages(false);\r\n        getProfile()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (change) {\r\n            setTitle('Show Shared Images');\r\n            getImages(false)\r\n        }\r\n        else {\r\n            setTitle('Show My Images');\r\n            getImages(true)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [change])\r\n\r\n    return (\r\n        <div className={classes.Cloudgram} >\r\n            <Button onClick={changeImagesHandler} id='controlImages' >{title}</Button>\r\n            <hr />\r\n            <ImageGrid title={title} images={images} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        images: state.image.images\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getImages: (shared) => dispatch(getImages(shared)),\r\n        getProfile: () => dispatch(getProfile())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cloudgram);","import React from 'react';\nimport classes from './App.module.css';\nimport BackgroundImage from './Components/BackgroundImage/BackgroundImage';\nimport Toolbar from './Components/Toolbar/Toolbar';\nimport { withRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Signin from './Components/Forms/Signin/Signin';\nimport Signup from './Components/Forms/Signup/Signup';\nimport LandingIntro from './Components/LandingIntro/LandingIntro';\nimport Cloudgram from './Container/Cloudgram';\nimport { connect } from 'react-redux';\n\nconst App = ({ isLoggedIn }) => {\n\n  return (\n    <div className={classes.App}>\n      <Toolbar />\n      <BackgroundImage />\n      {!isLoggedIn &&\n        <>\n          <LandingIntro />\n\n          <Switch>\n\n            <Route path='/login' exact component={Signin} />\n            <Route path='/signup' exact component={Signup} />\n            <Redirect from='/' to='/cloudgram' />\n\n          </Switch>\n        </>\n      }\n\n      {isLoggedIn &&\n        <Switch>\n\n          <Route path='/home' exact component={Cloudgram} />\n          <Redirect from='/' to='/home' />\n\n        </Switch>\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.firebase.auth.uid\n  }\n}\n\nexport default connect(mapStateToProps, null)(withRouter(App));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n\tauthError: null,\n\tuserData: null,\n\tsignupError: null\n}\n\nconst authReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase 'GOOGLE_LOGIN_ERROR':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: action.err.message\n\t\t\t}\n\t\tcase 'GOOGLE_LOGIN_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: null,\n\t\t\t\tuserData: action.data\n\t\t\t}\n\t\tcase 'SIGN_IN_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: null,\n\t\t\t\tuserData: action.data\n\t\t\t}\n\t\tcase 'SIGN_IN_ERROR':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: action.err.message\n\t\t\t}\n\t\tcase 'SIGNOUT_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserData: null\n\t\t\t}\n\t\tcase 'SIGNUP_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: null,\n\t\t\t\tuserData: action.data\n\t\t\t}\n\t\tcase 'SIGNUP_ERROR':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsignupError: action.err.message\n\t\t\t}\n\t\tcase 'GET_PROFILE_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserData: action.data\n\t\t\t}\n\t\tcase 'GET_PROFILE_ERROR':\n\t\t\treturn state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default authReducer","const initState = {\r\n    images: [],\r\n}\r\n\r\nconst imageReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'IMAGE_UPLOAD_ERROR':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'IMAGE_UPLOAD_SUCCESS':\r\n            return {\r\n                ...state,\r\n                images: action.images\r\n            }\r\n        case 'GET_IMAGES_SUCCESS':\r\n            return {\r\n                ...state,\r\n                images: action.images,\r\n            }\r\n        case 'GET_IMAGES_ERROR':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'IMAGE_SHARE_SUCCESS':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'IMAGE_SHARE_ERROR':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'DELETE_IMAGE_SUCCESS':\r\n            return {\r\n                ...state,\r\n                images: action.images\r\n            }\r\n        case 'DELETE_IMAGE_ERROR':\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default imageReducer","const initState = {\r\n    users: []\r\n}\r\n\r\nconst userReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_USERS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            }\r\n        case 'GET_USERS_ERROR':\r\n            return {\r\n                ...state,\r\n                err: 'Error retrieving users'\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","import authReducer          from './authReducer'\r\nimport { combineReducers }  from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer }  from 'react-redux-firebase'\r\nimport imageReducer from './imageReducer';\r\nimport userReducer from './userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tauth      : authReducer,\r\n\timage\t  : imageReducer,\r\n\tuser\t  : userReducer,\r\n\tfirestore : firestoreReducer,\r\n\tfirebase  : firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_API_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({\r\n    timestampsInSnapshots: true\r\n});\r\nconst storage = firebase.storage();\r\nconst timeStamp = firebase.firestore.FieldValue.serverTimestamp;\r\nexport { timeStamp, storage, firebaseConfig };\r\nexport default firebase;","import {\r\n\tcreateStore,\r\n\tapplyMiddleware,\r\n\tcompose\r\n} from 'redux'\r\nimport rootReducer                            from './reducers/rootReducer'\r\nimport thunk \t\t                       from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore }    from 'redux-firestore'\r\nimport { getFirebase } from 'react-redux-firebase'\r\nimport firebase                            from '../Firebase/Config'\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcompose(\r\n\t\tapplyMiddleware(\r\n\t\t\tthunk.withExtraArgument({\r\n\t\t\t\tgetFirebase,\r\n\t\t\t\tgetFirestore,\r\n\t\t\t\tgetStorage:firebase.storage()\r\n\t\t\t})\r\n\t\t),\r\n\t\treduxFirestore(firebase),\r\n\t)\r\n);\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\"\nimport store from \"./Store/index\";\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport firebase from 'firebase/app';\nimport { firebaseConfig } from './Firebase/Config';\n\nconst rrfProps = {\n  firebase,\n  config: firebaseConfig,\n  dispatch: store.dispatch\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider  {...rrfProps}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Toolbar_Header__BO0BE\",\"NavLink\":\"Toolbar_NavLink__1WtYe\",\"active\":\"Toolbar_active__2s3M8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalGallery\":\"ModalGallery_ModalGallery__3mQN5\",\"Container\":\"ModalGallery_Container__30GTU\"};"],"sourceRoot":""}